/*
  Copyright 2024 Google LLC
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.  
  
  You may obtain a copy of the License at
  
   https://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed  
  under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing  
  permissions and
  limitations under the License.
*/
{% set perPackageManager = {
    "npm": {
        "packages": "pkgs.nodejs_20",
        "onCreate": "npm ci --prefer-offline --no-audit --no-progress --timing" + ("\nyes | npx astro add tailwind" if tailwind == "true" else ""),
        "previewCmdPrefix": "\"npm\" \"run\" \"dev\" \"--\""
    },
    "bun": {
        "packages": "pkgs.bun",
        "onCreate": "bun install" + ("\nyes | npx astro add tailwind" if tailwind == "true" else ""),
        "previewCmdPrefix": "\"bunx\" \"--bun\" \"astro\" \"dev\""
    },
    "pnpm": {
        "packages": "pkgs.nodejs_20 pkgs.nodePackages.pnpm",
        "onCreate": "pnpm install" + ("\nyes | pnpm astro add tailwind" if tailwind == "true" else ""),
        "previewCmdPrefix": "\"pnpm\" \"run\" \"dev\""
    },
    "yarn": {
        "packages": "pkgs.nodejs_20 pkgs.yarn",
        "onCreate": "yarn" + ("\nyes | yarn astro add tailwind" if tailwind == "true" else ""),
        "previewCmdPrefix": "\"yarn\" \"dev\""
    },
}[packageManager]%}
# To learn more about how to use Nix to configure your environment
# see: https://developers.google.com/idx/guides/customize-idx-env
{ pkgs, ... }: {
  # Which nixpkgs channel to use.
  channel = "stable-23.11"; # or "unstable"
  # Use https://search.nixos.org/packages to find packages
  packages = [{{perPackageManager.packages}}];
  # Sets environment variables in the workspace
  env = {};
  idx = {
    # Search for the extensions you want on https://open-vsx.org/ and use "publisher.id"
    extensions = [
      "astro-build.astro-vscode"
    ];
    workspace = {
      # Runs when a workspace is first created with this `dev.nix` file
      onCreate = {
        install = "{{perPackageManager.onCreate}}";
        # Open editors for the following files by default, if they exist:
        default.openFiles = [ "src/pages/index.astro" ];
      };
      # To run something each time the workspace is (re)started, use the `onStart` hook
    };
    # Enable previews and customize configuration
    previews = {
      enable = true;
      previews = {
        web = {
          command = [{{perPackageManager.previewCmdPrefix}} "--port" "$PORT" "--hostname" "0.0.0.0"];
          manager = "web";
        };
      };
    };
  };
}